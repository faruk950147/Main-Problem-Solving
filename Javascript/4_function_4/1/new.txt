üîµ new ‡¶ï‡ßÄ?
new ‡¶è‡¶ï‡¶ü‡¶ø JavaScript keyword ‡¶Ø‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá constructor function ‡¶¨‡¶æ class ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá‡•§

üîß ‡¶ï‡ßÄ ‡¶ï‡¶æ‡¶ú?
new ‡¶Æ‡ßÇ‡¶≤‡¶§ ‡ß™‡¶ü‡¶ø ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶Ø‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßã‡¶®‡ßã constructor ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‡¶®:

‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶ñ‡¶æ‡¶≤‡¶ø object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá‡•§

‡¶∏‡ßá‡¶á object-‡¶è‡¶∞ prototype ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßá Constructor function-‡¶è‡¶∞ .prototype ‡¶è‡¶∞ ‡¶∏‡¶ô‡ßç‡¶ó‡ßá‡•§

Constructor function-‡¶ï‡ßá ‡¶∏‡ßá‡¶á object-‡¶è‡¶∞ context (i.e., this) ‡¶¶‡¶ø‡ßü‡ßá call ‡¶ï‡¶∞‡ßá‡•§

‡¶Ø‡¶¶‡¶ø constructor ‡¶ï‡¶ø‡¶õ‡ßÅ return ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶∏‡ßá‡¶á ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ object return ‡¶ï‡¶∞‡ßá‡•§

üîç Syntax:
javascript
Copy
Edit
const objectName = new ConstructorFunction();
‡¶Ö‡¶•‡¶¨‡¶æ ES6 class ‡¶¶‡¶ø‡ßü‡ßá:

javascript
Copy
Edit
class Person {
  constructor(name) {
    this.name = name;
  }
}

const p1 = new Person("Omar");
‡ßß: Constructor Function ‡¶¶‡¶ø‡ßü‡ßá
javascript
Copy
Edit
function Car(model, year) {
  this.model = model;
  this.year = year;
}

const myCar = new Car("Toyota", 2020);
console.log(myCar);  // { model: "Toyota", year: 2020 }
‡ß®: Class ‡¶¶‡¶ø‡ßü‡ßá (ES6+)
javascript
Copy
Edit
class Student {
  constructor(name, roll) {
    this.name = name;
    this.roll = roll;
  }
}

const s1 = new Student("Faruk", 101);
console.log(s1);  // Student { name: "Faruk", roll: 101 }
‚ùì ‡¶ï‡ßá‡¶® new ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨?
Custom object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá (Constructor function ‡¶¨‡¶æ class ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá)

Prototype chain ‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá set ‡¶ï‡¶∞‡¶§‡ßá

Reusable object templates ‡¶¨‡¶æ‡¶®‡¶æ‡¶§‡ßá (OOP style)

‡¶¨‡ßú application structure-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø class/object-based design follow ‡¶ï‡¶∞‡¶§‡ßá

‡¶Ø‡¶¶‡¶ø new ‡¶õ‡¶æ‡ßú‡¶æ call ‡¶ï‡¶∞‡¶ø?
javascript
Copy
Edit
function Test(name) {
  this.name = name;
}

const t = Test("Faruk");  // ‚ö†Ô∏è ‡¶è‡¶ñ‡¶æ‡¶®‡ßá new ‡¶®‡ßá‡¶á
console.log(t);           // undefined
console.log(name);        // "Faruk" global scope-‡¶è ‡¶ö‡¶≤‡ßá ‡¶ó‡ßá‡¶õ‡ßá (‡¶≠‡ßÅ‡¶≤)
‡¶§‡¶æ‡¶á new ‡¶õ‡¶æ‡ßú‡¶æ this global scope-‡¶è ‡¶ö‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü‡•§ ‡¶è‡¶ü‡¶ø bug ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§

‡¶¨‡¶ø‡¶∑‡ßü	‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ
new ‡¶ï‡¶ø	JavaScript keyword
‡¶ï‡¶æ‡¶ú	‡¶®‡¶§‡ßÅ‡¶® object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ì constructor ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßá
‡¶ï‡ßá‡¶® ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®	Object-oriented design, reusable ‡¶ï‡ßã‡¶° ‡¶ì ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ context-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
‡¶ï‡¶ñ‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞	Constructor function ‡¶¨‡¶æ class ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶§‡ßÅ‡¶® instance ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü
Constructor ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø special method/function, ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶ï‡ßã‡¶®‡ßã class ‡¶•‡ßá‡¶ï‡ßá object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶∏‡ßç‡¶¨‡ßü‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶≠‡¶æ‡¶¨‡ßá (automatically) ‡¶ï‡¶≤ ‡¶π‡ßü‡•§
Constructor-‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü initial value ‡¶¨‡¶æ setup ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

üîπ Constructor ‡¶è‡¶∞ ‡¶ï‡¶æ‡¶ú:
Object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü initial value ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ

Object creation ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶æ‡¶ú automatically ‡¶ï‡¶∞‡¶æ‡¶®‡ßã

Class-‡¶è‡¶∞ instance ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü setup/initialization

üîπ ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá constructor ‡¶è‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?
    ‡¶è‡¶ï‡¶ü‡¶æ class ‡¶•‡ßá‡¶ï‡ßá object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶æ‡¶ú automatically ‡¶ï‡¶∞‡¶æ‡¶®‡ßã


Constructor-‡¶è‡¶∞ Characteristics (‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø):
üî¢	‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø (Characteristic)	‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ (Explanation)
1Ô∏è‚É£	Class-‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶π‡ßü	Constructor-‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á class-‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶π‡¶§‡ßá ‡¶π‡ßü (Java/C++)
2Ô∏è‚É£	Return type ‡¶•‡¶æ‡¶ï‡ßá ‡¶®‡¶æ	Constructor-‡¶è‡¶∞ ‡¶ï‡ßã‡¶®‡ßã return type (‡¶Ø‡ßá‡¶Æ‡¶®: int, void) ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶π‡ßü ‡¶®‡¶æ
3Ô∏è‚É£	Object ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü auto call ‡¶π‡ßü	‡¶Ø‡¶ñ‡¶®‡¶á object ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü, constructor ‡¶®‡¶ø‡¶ú‡ßá ‡¶®‡¶ø‡¶ú‡ßá‡¶á ‡¶ö‡¶≤‡ßá
4Ô∏è‚É£	Initialization ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§	Object-‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá‡¶∞ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶¨‡¶æ property ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡ßü
5Ô∏è‚É£	‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï constructor ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá	Constructor overloading ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü (Java/C++)
6Ô∏è‚É£	Static, final ‡¶¨‡¶æ abstract ‡¶π‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá ‡¶®‡¶æ	Constructor ‡¶ï‡¶ñ‡¶®‡ßã‡¶á static ‡¶¨‡¶æ final ‡¶π‡ßü ‡¶®‡¶æ
7Ô∏è‚É£	Inheritance-‡¶è subclass constructor call ‡¶ï‡¶∞‡ßá	Inheritance ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶≤‡ßá superclass-‡¶è‡¶∞ constructor ‡¶Ü‡¶ó‡ßá call ‡¶π‡ßü


python
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def show(self):
        print(f"{self.name} is {self.age} years old")

p = Person("John", 30)
p.show()


class Student:
    def __init__(self, name, roll):
        self.name = name     # object-‡¶è‡¶∞ name ‡¶∏‡ßá‡¶ü ‡¶π‡¶≤‡ßã
        self.roll = roll     # object-‡¶è‡¶∞ roll ‡¶∏‡ßá‡¶ü ‡¶π‡¶≤‡ßã
        print("Constructor auto called!")

# object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã
s1 = Student("Omar", 101)  # Constructor ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶á auto call ‡¶π‡¶¨‡ßá

print(s1.name)  # Omar
print(s1.roll)  # 101

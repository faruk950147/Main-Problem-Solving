ЁЯОп OOP-ржПрж░ 4ржЯрж┐ ржорзВрж▓ рж╕рзНрждржорзНржн (4 Pillars) рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ:
тЬЕ 1. Encapsulation (ржЖржмрж░ржг/ржкрзНржпрж╛ржХрзЗржЯ ржХрж░рж╛)
ЁЯУМ ржХрзА?
рждрзЛржорж╛рж░ ржбрзЗржЯрж╛ (ржпрзЗржоржи ржирж╛ржо, ржмрзЯрж╕) ржЖрж░ ржХрж╛ржЬ ржХрж░рж╛рж░ ржорзЗржержб (function) тАФ рж╕ржм ржПржХрж╕рж╛ржерзЗ ржПржХржЯрж╛ ржХрзНрж▓рж╛рж╕рзЗрж░ ржнрзЗрждрж░рзЗ ржкрзНржпрж╛ржХрзЗржЯ ржХрж░рзЗ рж░рж╛ржЦрж╛ рж╣рзЯред ржмрж╛ржЗрж░рзЗ ржерзЗржХрзЗ ржХрзЗржЙ ржЪрж╛ржЗрж▓рзЗ рж╕рж░рж╛рж╕рж░рж┐ ржбрзЗржЯрж╛ ржЪрзЗржЮрзНржЬ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ред

ЁЯОБ ржЙржжрж╛рж╣рж░ржг:
python
Copy
Edit
class Student:
    def __init__(self, name, age):
        self.name = name    # data
        self.age = age      # data

    def show(self):         # method
        print(f"{self.name} is {self.age} years old")
ЁЯза ржмрзБржЭрзЛ ржХрж┐ржнрж╛ржмрзЗ?
ржпрзЗржи ржПржХржЯрж╛ ржмрж╛ржХрзНрж╕рзЗрж░ ржнрж┐рждрж░рзЗ рж╕ржмржХрж┐ржЫрзБ ржЖржЫрзЗ тАФ ржмрж╛ржЗрж░рзЗ ржерзЗржХрзЗ рждрзБржорж┐ рж╢рзБржзрзБ ржжрж░ржЬрж╛ ржжрж┐рзЯрзЗ ржврзБржХрждрзЗ ржкрж╛рж░рзЛ, ржнрзЗрждрж░рзЗрж░ рж╕ржмржХрж┐ржЫрзБ ржЦрзБрж▓рзЗ ржлрзЗрж▓рждрзЗ ржкрж╛рж░рзЛ ржирж╛ред

тЬЕ 2. Abstraction (ржЕржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржЬрж┐ржирж┐рж╕ рж▓рзБржХрж╛ржирзЛ)
ЁЯУМ ржХрзА?
ржЗржЙржЬрж╛рж░ржХрзЗ рж╢рзБржзрзБ ржжрж░ржХрж╛рж░рж┐ ржЬрж┐ржирж┐рж╕ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯ, ржнрж┐рждрж░рзЗрж░ ржЬржЯрж┐рж▓ ржХрзЛржб, ржЕржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржЬрж┐ржирж┐рж╕ рж▓рзБржХрж┐рзЯрзЗ ржлрзЗрж▓рж╛ рж╣рзЯред

ЁЯОБ ржЙржжрж╛рж╣рж░ржг:
python
Copy
Edit
from abc import ABC, abstractmethod

class Animal(ABC):
    @abstractmethod
    def sound(self):
        pass

class Dog(Animal):
    def sound(self):
        print("Bark")

class Cat(Animal):
    def sound(self):
        print("Meow")
ЁЯза ржмрзБржЭрзЛ ржХрж┐ржнрж╛ржмрзЗ?
рждрзБржорж┐ ржорзЛржмрж╛ржЗрж▓ ржЪрж╛рж▓рж╛ржУ тАФ рж╢рзБржзрзБ ржмрзЛрждрж╛ржо ржЪрзЗржкрзЗ ржХрж╛ржЬ рж╣рзЯред ржнрж┐рждрж░рзЗ рж╕рж╛рж░рзНржХрж┐ржЯ ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ, рждрзБржорж┐ ржЬрж╛ржирзЛ ржирж╛ тАФ ржПржЯрж╛ рж╣ржЪрзНржЫрзЗ abstractionред

тЬЕ 3. Inheritance (ржЙрждрзНрждрж░рж╛ржзрж┐ржХрж╛рж░/ржмржВрж╢ржЧржд)
ЁЯУМ ржХрзА?
ржПржХржЯрж╛ ржХрзНрж▓рж╛рж╕ ржЖрж░рзЗржХржЯрж╛ ржХрзНрж▓рж╛рж╕ ржерзЗржХрзЗ ржкрзНрж░рзЛржкрж╛рж░рзНржЯрж┐ (ржбрзЗржЯрж╛+ржорзЗржержб) ржкрж╛рзЯред ржпрзЗржоржи ржмрж╛ржмрж╛ ржерзЗржХрзЗ ржЫрзЗрж▓рзЗ ржХрж┐ржЫрзБ ржЬрж┐ржирж┐рж╕ ржкрж╛рзЯред

ЁЯОБ ржЙржжрж╛рж╣рж░ржг:
python
Copy
Edit
class Person:
    def speak(self):
        print("I can speak")

class Student(Person):  # Inherits from Person
    def study(self):
        print("I can study")
ЁЯза ржмрзБржЭрзЛ ржХрж┐ржнрж╛ржмрзЗ?
ржмрж╛ржмрж╛ ржХржерж╛ ржмрж▓рждрзЗ ржкрж╛рж░рзЗ, ржЫрзЗрж▓рзЗ ржмрж╛ржмрж╛рж░ ржорждрзЛржЗ ржХржерж╛ ржмрж▓рждрзЗ ржкрж╛рж░рзЗ + ржирж┐ржЬрзЗрж░ ржЖрж▓рж╛ржжрж╛ ржХрж╛ржЬржУ ржХрж░рждрзЗ ржкрж╛рж░рзЗред

тЬЕ 4. Polymorphism (ржПржХ ржирж╛ржорзЗ ржЕржирзЗржХ ржХрж╛ржЬ)
ЁЯУМ ржХрзА?
ржПржХржЗ ржирж╛ржорзЗрж░ ржлрж╛ржВрж╢ржи, ржХрж┐ржирзНрждрзБ ржмрж┐ржнрж┐ржирзНржи ржХрзНрж▓рж╛рж╕рзЗ ржнрж┐ржирзНржиржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗред

ЁЯОБ ржЙржжрж╛рж╣рж░ржг:
python
Copy
Edit
class Bird:
    def sound(self):
        print("Chirp")

class Cow:
    def sound(self):
        print("Moo")

def make_sound(animal):
    animal.sound()

b = Bird()
c = Cow()
make_sound(b)  # Chirp
make_sound(c)  # Moo
ЁЯза ржмрзБржЭрзЛ ржХрж┐ржнрж╛ржмрзЗ?
ржПржХржЗ ржирж╛ржо sound(), ржХрж┐ржирзНрждрзБ ржмрж┐ржнрж┐ржирзНржи ржкрзНрж░рж╛ржгрзА ржнрж┐ржирзНржи рж╢ржмрзНржж ржХрж░рзЗ тАФ ржПржЯрж┐ржЗ polymorphismред

ЁЯзй ржПржХ ржХржерж╛рзЯ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржЯрж┐ржкрж╕:
Pillar	ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржХрзМрж╢рж▓
Encapsulation	рж╕ржм ржХрж┐ржЫрзБ ржПржХ ржкрзНржпрж╛ржХрзЗржЯ (class) ржП
Abstraction	ржжрж░ржХрж╛рж░рж┐ ржЬрж┐ржирж┐рж╕ ржжрзЗржЦрж╛ржУ, ржмрж╛ржХрж┐ рж▓рзБржХрж╛ржУ
Inheritance	ржмрж╛ржмрж╛-ржорж╛рзЯрзЗрж░ ржЬрж┐ржирж┐рж╕ ржЫрзЗрж▓рзЗржорзЗрзЯрзЗ ржкрж╛рзЯ
Polymorphism	ржПржХ ржирж╛ржо, ржЖрж▓рж╛ржжрж╛ ржХрж╛ржЬ